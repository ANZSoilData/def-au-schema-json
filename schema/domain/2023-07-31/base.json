{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "base.json",
	"title": "ANSIS JSON Base Schema",
	"description": "Base properties and objects used to identify, type and link entities, bind them to schema, and otherwise describe objects from a system, rather than domain, perspective.",
	"type": "null",
	"_curiPrefix": {
		"xs": "https://www.w3.org/TR/xmlschema-2/#",
		"rdfs": "http://www.w3.org/2000/01/rdf-schema#",
		"foaf": "http://xmlns.com/foaf/0.1/#"
	},
	"$defs": {
		"id": {
			"title": "ANSIS Object Identifier",
			"description": "A local system identifier (i.e. not intended or guaranteed to be universally unique) for an object in the ANSIS system.",
			"$comment": "Generated by ANSIS. Used to link data together during mapping and processing. After: https://jsonapi.org/format/#document-resource-object-identification",
			"type": "string"
		},
		"type": {
			"title": "JSON Object Type",
			"description": "A compact URI uniquely identifying the type of the object using IDs from the OWL/RDF domain model.",
			"$comment": "After: https://jsonapi.org/format/#document-resource-objects and https://www.w3.org/TR/json-ld/#specifying-the-type.",
			"type": "string",
			"format": "iri"
		},
		"colourModel": {
			"title": "colour model",
			"description": "The colour model used for the value. E.g. RGB , the Munsell system, Japanese Industrial Standards colours (using Munsell notation), a value from the ASLS Mottle Colours vocabulary (Mottles only), or a colour term.",
			"$defs": {
				"Mottles": {
					"$ref": "./enum.json#/$defs/ColourModel_Mottles"
				},
				"Soil": {
					"$ref": "./enum.json#/$defs/ColourModel"
				}
			}
		},
		"label": {
			"@id": "rdfs:label",
			"title": "RDF Schema Label",
			"description": "A human-readable name for the object.",
			"type": "string"
		},
		"name": {
			"@id": "foaf:term_name",
			"title": "FOAF Name",
			"description": "A name for some thing.",
			"type": "string"
		},
		"pointer": {
			"title": "JSON Pointer",
			"description": "A JSON pointer to an object elsewhere in the document.",
			"type": "string"
		},
		"scopedIdentifier": {
			"title": "scoped identifier",
			"description": "An identifier for a site, sample or other entity scoped to the authority that assigned the identifier.",
			"$ref": "#/$defs/ScopedIdentifier"
		},
		"source": {
			"@id": "dcterms:source",
			"title": "Dublin Core Source",
			"description": "A related resource from which the described resource is derived. The described resource may be derived from the related resource in whole or in part. Recommended best practice is to identify the related resource by means of a string conforming to a formal identification system.",
			"type": "string"
		},
		"value": {
			"@id": "ansis:value",
			"title": "value",
			"description": "Simple literal value.",
			"$defs": {
				"Boolean": {
					"type": "boolean",
					"description": "Boolean."
				},
				"DateTime": {
					"type": "string",
					"oneOf": [
						{
							"format": "date"
						},
						{
							"format": "date-time"
						}
					],
					"description": "Time and/or date."
				},
				"Integer": {
					"type": "integer",
					"description": "Integer."
				},
				"Number": {
					"type": "number",
					"description": "Number."
				},
				"String": {
					"type": "string",
					"description": "String."
				}
			}
		},
		"Classification": {
			"@id": "ansis:SoilClassification",
			"title": "ANSIS Classification",
			"description": "The classifier for an entity - used when an ANSIS vocabulary is not available but a formal vocabulary (the `source`) does, or should, exist.",
			"$comment": "Expands scope of ansis:SoilClassification to support the classification of other entity types.",
			"type": "object",
			"required": [
				"type",
				"value",
				"source"
			],
			"_preferred": [
			],
			"properties": {
				"id": {
					"$ref": "./base.json#/$defs/id"
				},
				"type": {
					"$ref": "./base.json#/$defs/type",
					"const": "ansis:Classification"
				},
				"value": {
					"$ref": "./base.json#/$defs/value/$defs/String",
					"type": "string"
				},
				"source": {
					"$ref": "./base.json#/$defs/source"
				}
			}
		},
		"Colour": {
			"@id": "ansis:SoilColour",
			"title": "ANSIS Soil Colour",
			"description": "Undefined.",
			"type": "object",
			"required": [
				"colourModel",
				"result"
			],
			"_preferred": [
				"moistureStatus"
			],
			"properties": {
				"moistureStatus": {
					"$ref": "./properties.json#/$defs/_astd/$defs/moistureStatus/$defs/Colour"
				},
				"colourModel": {
					"$ref": "./base.json#/$defs/colourModel/$defs/Mottles"
				},
				"result": {
					"$ref": "./sosa.json#/$defs/result",
					"$comment": "Colour result value rules are set for each indidual colour model."
				}
			},
			"additionalProperties": false
		},
		"ObservableProperty": {
			"title": "Observable Property",
			"description": "A collection SOSA properties for an observable property value.",
			"$comment": "Equivalent to a sosa:Observation but the observedProperty is a key in a JSON object and the feature of interest is that object.",
			"type": "object",
			"properties": {
				"result": {
					"$ref": "./sosa.json#/$defs/result",
					"$comment": "Observation result value rules are set for each indidual property."
				},
				"qualityOfObservation": {
					"$ref": "./sosa.json#/$defs/qualityOfObservation"
				},
				"usedProcedure": {
					"$ref": "./sosa.json#/$defs/usedProcedure"
				},
				"madeBySensor": {
					"$ref": "./sosa.json#/$defs/madeBySensor"
				},
				"phenomenonTime": {
					"$ref": "./sosa.json#/$defs/phenomenonTime"
				},
				"resultTime": {
					"$ref": "./sosa.json#/$defs/resultTime"
				},
				"sample": {
					"$ref": "./sosa.json#/$defs/sample"
				}
			}
		},
		"ScopedIdentifier": {
			"title": "ANSIS Scoped Identifier",
			"description": "A simple object holding an identifier as assigned by a provider/agency. The provider/agency may, optionally, be specified by the authority property.",
			"$comment": "Based on the GML identifier (scoped name - code with with authority).",
			"type": "object",
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"$ref": "#/$defs/name"
				},
				"authority": {
					"$ref": "#/$defs/name",
					"$comment": "The ID of the provider (suggestion)."
				}
			}
		}
	}
}