{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "base.json",
    "title": "ANSIS JSON Base Schema",
    "description": "Base properties and objects used to identify, type and link entities, bind them to schema, and otherwise describe objects from a system, rather than domain, perspective.",
    "type": "null",
    "$defs": {
        "curiPrefix": {
            "xs": "https://www.w3.org/TR/xmlschema-2/#",
            "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
            "foaf": "http://xmlns.com/foaf/0.1/#"
        },
        "id": {
            "$anchor": "id",
            "range@type": "xs:string",
            "title": "ANSIS Object Identifier",
            "description": "A local system identifier (i.e. not intended or guaranteed to be universally unique) for an object in the ANSIS system.",
            "$comment": "Generated by ANSIS. Used to link data together during mapping and processing. After: https://jsonapi.org/format/#document-resource-object-identification",
            "type": "string"
        },
        "type": {
            "$anchor": "type",
            "range@type": "xs:anyURI",
            "title": "JSON Object Type",
            "description": "A compact URI uniquely identifying the type of the object using IDs from the OWL/RDF domain model.",
            "$comment": "After: https://jsonapi.org/format/#document-resource-objects and https://www.w3.org/TR/json-ld/#specifying-the-type.",
            "type": "string",
            "format": "iri"
        },
        "label": {
            "$anchor": "label",
            "@id": "rdfs:label",
            "range@Type": "xs:string",
            "title": "RDF Schema Label",
            "description": "A human-readable name for the object.",
            "type": "string"
        },
        "name": {
            "$anchor": "name",
            "@id": "foaf:term_name",
            "range@Type": "xs:string",
            "title": "FOAF Name",
            "description": "A name for some thing.",
            "type": "string"
        },
        "scopedIdentifier": {
            "$anchor": "scopedIdentifier",
            "range@type": "base:ScopedIdentifier",
            "title": "scoped identifier",
            "description": "An identifier for a site, sample or other entity scoped to the authority that assigned the identifier.",
            "$ref": "#ScopedIdentifier"
        },
        "source": {
            "$anchor": "source",
            "@id": "dcterms:source",
            "range@Type": "xs:string",
            "title": "Dublin Core Source",
            "description": "A related resource from which the described resource is derived. The described resource may be derived from the related resource in whole or in part. Recommended best practice is to identify the related resource by means of a string conforming to a formal identification system.",
            "type": "string"
        },
        "ObservableProperty": {
            "$anchor": "ObservableProperty",
            "title": "Observable Property",
            "description": "A collection SOSA properties for an observable property value.",
            "$comment": "Equavalent to a sosa:Observation but the observedProperty is a key in a JSON object and the feature of interest is that object.",
            "type": "object",
            "properties": {
                "qualityOfObservation": {"$ref": "./sosa.json#qualityOfObservation"},
                "usedProcedure": {"$ref": "./sosa.json#usedProcedure"},
                "madeBySensor": {"$ref": "./sosa.json#madeBySensor"},
                "phenomenonTime": {"$ref": "./sosa.json#phenomenonTime"},
                "resultTime": {"$ref": "./sosa.json#resultTime"},
                "sample": {"$ref": "./sosa.json#sample"}
            }
        },
        "ScopedIdentifier": {
            "$anchor": "ScopedIdentifier",
            "title": "ANSIS Scoped Identifier",
            "description": "A simple object holding an identifier as assigned by a provider/agency. The provider/agency may, optionally, be specified by the authority property.",
            "$comment": "Based on the GML identifier (scoped name - code with with authority).",
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {"$ref": "#name"},
                "authority": {
                    "$ref": "#name",
                    "$comment": "The ID of the provider (suggestion)."
                }
            }
        }
    }
}